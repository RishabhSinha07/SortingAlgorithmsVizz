{"version":3,"sources":["Components/Header.js","Components/Body.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","Navbar","collapseOnSelect","expand","style","backgroundColor","Container","Toggle","Collapse","id","Nav","className","fontFamily","NavDropdown","title","currentAlgo","Button","variant","onClick","updateAlgo","randomize","min","max","window","screen","availWidth","tooltip","value","sliderValue","onChange","changeEvent","SetSliderValue","target","start","Body","useState","figure","setfigure","data","updateData","setupdateData","console","log","useEffect","updateFigure","Udata","fPos","tPos","color","temp","width","length","index","bColor","push","Col","textAlign","height","borderLeft","marginLeft","position","display","float","startSorting","algorithm","insertionSort","selectionSort","bubbleSort","countSort","cycleSort","sleep","milliseconds","Promise","resolve","setTimeout","arr","n","a","i","key","j","swap","xp","yp","min_idx","Math","apply","range","count","Array","from","_","output","cycle_start","item","pos","setRandomize","setStart","floor","random","map","x","element2","Footer","open","App","setalgorithm","Start","Randomize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sYAiCeA,MA5Bf,SAAgBC,GACZ,OACI,8BACA,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,MAAO,CAACC,gBAAiB,WAA9D,SACA,eAACC,EAAA,EAAD,WACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,0BAE7B,eAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,wBAApB,UACA,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAUP,MAAS,CAACQ,WAAW,WAA9C,8BACI,cAACF,EAAA,EAAD,CAAKC,UAAU,UAAf,SACA,eAACE,EAAA,EAAD,CAAaC,MAAOd,EAAMe,YAAaN,GAAG,0BAA1C,UACI,cAACO,EAAA,EAAD,CAAQP,GAAG,eAAeQ,QAAQ,QAAQC,QAAW,WAAOlB,EAAMmB,WAAW,mBAA7E,4BACA,cAACH,EAAA,EAAD,CAAQP,GAAG,eAAeQ,QAAQ,QAAQC,QAAW,WAAOlB,EAAMmB,WAAW,mBAA7E,4BACA,cAACH,EAAA,EAAD,CAAQP,GAAG,eAAeQ,QAAQ,QAAQC,QAAW,WAAOlB,EAAMmB,WAAW,gBAA7E,yBACA,cAACH,EAAA,EAAD,CAAQP,GAAG,eAAeQ,QAAQ,QAAQC,QAAW,WAAOlB,EAAMmB,WAAW,eAA7E,wBACA,cAACH,EAAA,EAAD,CAAQP,GAAG,eAAeQ,QAAQ,QAAQC,QAAW,WAAOlB,EAAMmB,WAAW,gBAA7E,8BAGR,cAACH,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAAW,WAAOlB,EAAMoB,WAAU,IAAzD,uBACA,cAAC,IAAD,aAAaC,IAAO,EAAGC,IAAOC,OAAOC,OAAOC,WAAW,IAAKC,QAAU,KAAKT,QAAU,UAAUR,GAAG,SAASkB,MAAO3B,EAAM4B,YAAaC,SAAU,SAAAC,GAAW,OAAI9B,EAAM+B,eAAeD,EAAYE,OAAOL,SAAtM,UAAsN,UACtN,cAACX,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAW,WAAOlB,EAAMiC,OAAM,IAAxD,8B,yCCqNOC,MAzOf,SAAclC,GACV,MAA4BmC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAASnC,EAAMsC,MAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEAC,QAAQC,IAAIH,GAEZI,qBAAU,WACNC,EAAaL,EAAW,KAAK,KAAK,QACnC,IAGH,IAMMK,EAAe,SAACC,EAAMC,EAAKC,EAAKC,GAKlC,IAJA,IAAIC,EAAO,GAEPC,EADc3B,OAAOC,OAAOC,WACRoB,EAAMM,OAEtBC,EAAQ,EAAGA,EAAQP,EAAMM,OAAQC,IAAQ,CAC7C,GAAGA,GAASN,GAAQM,GAASL,EACzB,IAAIM,EAASL,OAGTK,EAAS,SAEjBJ,EAAKK,KAAK,CACN,QAAU,cAACC,EAAA,EAAD,UAAK,qBAAKnD,MAAS,CAACoD,UAAU,SAASR,MAAM,QAAQS,OAAO,GAAD,OAAiB,GAAbZ,EAAMO,GAAV,MAAwBF,MAAM,GAAD,OAAIA,GAAS7C,gBAAgB,GAAD,OAAIgD,IAAnH,SAA+HR,EAAMO,OACpJ,SAAW,qBAAKhD,MAAS,CAACsD,WAAW,aAAD,OAAcL,GAASI,OAAO,GAAD,OAAiB,GAAbZ,EAAMO,GAAV,MAAwBO,WAAW,MAAMC,SAAS,WAAWC,QAAQ,SAASC,MAAM,UACrJ,MAAQ,cAACP,EAAA,EAAD,UAAK,8BAAmB,GAAbV,EAAMO,SAGjCf,EAAUY,IAGRc,EAAe,WACjBtB,QAAQC,IAAIH,GACU,kBAAnBvC,EAAMgE,WAA+BC,EAAc1B,EAAWA,EAAWY,QACtD,kBAAnBnD,EAAMgE,WAA+BE,EAAc3B,EAAWA,EAAWY,QACtD,eAAnBnD,EAAMgE,WA1CI,sCA0CwBG,CAAW5B,EAAWA,EAAWY,QAChD,cAAnBnD,EAAMgE,WA3CI,oCA2CuBI,CAAU7B,GACxB,eAAnBvC,EAAMgE,WA5CI,sCA4CwBK,CAAU9B,EAAWA,EAAWY,SAInEmB,EAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAIhDN,EAAa,uCAAG,WAAMU,EAAIC,GAAV,mBAAAC,EAAA,sDAClBpC,QAAQC,IAAI,0BAA0BiC,GAEjCG,EAAI,EAHS,YAGNA,EAAIF,GAHE,iBAIdG,EAAMJ,EAAIG,GACVE,EAAIF,EAAI,EALM,YAMPE,GAAK,GAAKL,EAAIK,GAAKD,GANZ,iCAOJT,EAAM,IAPF,OAQV1B,EAAa+B,EAAIK,EAAE,EAAEA,EAAE,SACvBL,EAAIK,EAAI,GAAKL,EAAIK,GACjBA,GAAQ,EAVE,uBAYlBL,EAAIK,EAAI,GAAKD,EAZK,QAGCD,IAHD,uBAclBlC,EAAa+B,EAAI,KAAK,KAAK,MAC3BlC,QAAQC,IAAI,kBAAkBiC,GAfZ,4CAAH,wDAkBbM,EAAO,SAACN,EAAIO,EAAIC,GAClB,IAAIlC,EAAO0B,EAAIO,GACfP,EAAIO,GAAMP,EAAIQ,GACdR,EAAIQ,GAAMlC,GAGRiB,EAAa,uCAAG,WAAMS,EAAIC,GAAV,mBAAAC,EAAA,sDAIbC,EAAI,EAJS,YAINA,EAAIF,EAAE,GAJA,iBAQd,IADAQ,EAAUN,EACLE,EAAIF,EAAI,EAAGE,EAAIJ,EAAGI,IACnBL,EAAIK,GAAKL,EAAIS,KACbA,EAAUJ,GAVA,OAadC,EAAKN,EAAIS,EAASN,GAbJ,SAcRR,EAAM,IAdE,OAed1B,EAAa+B,EAAIS,EAAQN,EAAE,SAfb,OAIGA,IAJH,uBAiBlBlC,EAAa+B,EAAI,KAAK,KAAK,MAjBT,4CAAH,wDA7EF,4CAiGjB,WAA2BA,EAAKC,GAAhC,iBAAAC,EAAA,sDAEKC,EAAI,EAFT,YAEYA,EAAIF,EAAE,GAFlB,iBAISI,EAAI,EAJb,YAIgBA,EAAIJ,EAAEE,EAAE,GAJxB,sBAMYH,EAAIK,GAAKL,EAAIK,EAAE,IAN3B,uBAQQC,EAAKN,EAAIK,EAAEA,EAAE,GARrB,SAScV,EAAM,IATpB,OAUQ1B,EAAa+B,EAAIK,EAAEA,EAAE,EAAE,SAV/B,OAI2BA,IAJ3B,uBAEqBF,IAFrB,4DAjGiB,kEAgHjB,WAAyBH,GAAzB,yBAAAE,EAAA,sDAOI,IANIvD,EAAM+D,KAAK/D,IAAIgE,MAAMD,KAAMV,GAC3BtD,EAAMgE,KAAKhE,IAAIiE,MAAMD,KAAMV,GAE3BY,EAAQjE,EAAMD,EAAM,EACpBmE,EAAQC,MAAMC,KAAK,CAACvC,OAAQoC,IAAQ,SAACI,EAAGb,GAAJ,OAAU,KAC9Cc,EAASH,MAAMC,KAAK,CAACvC,OAAQwB,EAAIxB,SAAS,SAACwC,EAAGb,GAAJ,OAAU,KAC/CA,EAAI,EAAGA,EAAIH,EAAIxB,OAAQ2B,IAC5BU,EAAMb,EAAIG,GAAKzD,KAGnB,IAAKyD,EAAI,EAAGA,EAAIU,EAAMrC,OAAQ2B,IAC1BU,EAAMV,IAAMU,EAAMV,EAAI,GAGrBA,EAAIH,EAAIxB,OAAS,EAf1B,YAe6B2B,GAAK,GAflC,wBAgBQc,EAAOJ,EAAMb,EAAIG,GAAKzD,GAAO,GAAKsD,EAAIG,GAhB9C,UAiBcR,EAAM,IAjBpB,QAkBQ1B,EAAa+B,EAAI,KAAKG,EAAE,OACxBU,EAAMb,EAAIG,GAAKzD,KAnBvB,QAeqCyD,IAfrC,uBAsBSA,EAAI,EAtBb,aAsBgBA,EAAIH,EAAIxB,QAtBxB,wBAuBQwB,EAAIG,GAAKc,EAAOd,GAvBxB,UAwBcR,EAAM,IAxBpB,QAyBQ1B,EAAa+B,EAAI,KAAKG,EAAE,SAzBhC,QAsBgCA,IAtBhC,6DAhHiB,kEA6IjB,WAAyBH,EAAKC,GAA9B,2BAAAC,EAAA,sDAIiB,EAIJgB,EAAc,EAR3B,YAQ8BA,GAAejB,EAAI,GARjD,wBAYYkB,EAAOnB,EAAIkB,GAZvB,SAacvB,EAAM,IAbpB,OAmBQ,IALA1B,EAAa+B,EAAI,KAAKkB,EAAY,OAI9BE,EAAMF,EACDf,EAAIe,EAAc,EAAGf,EAAIF,EAAGE,IAC7BH,EAAIG,GAAKgB,GACTC,IArBhB,GAwBYA,GAAOF,EAxBnB,wDA4BQ,KAAOC,GAAQnB,EAAIoB,IACfA,GAAO,EA7BnB,GAgCYA,GAAOF,EAhCnB,wBAkCgB5C,EAAO6C,EACXA,EAAOnB,EAAIoB,GACXpB,EAAIoB,GAAO9C,EApCvB,UAqCkBqB,EAAM,IArCxB,QAsCY1B,EAAa+B,EAAI,KAAKoB,EAAI,SAtCtC,WA2CeA,GAAOF,EA3CtB,iBAgDY,IAHAE,EAAMF,EAGGf,EAAIe,EAAc,EAAGf,EAAIF,EAAGE,IAC7BH,EAAIG,GAAKgB,IACTC,GAAO,GAGf,KAAOD,GAAQnB,EAAIoB,IACfA,GAAO,EAtDvB,GAyDgBD,GAAQnB,EAAIoB,GAzD5B,wBA0DoB9C,EAAO6C,EACXA,EAAOnB,EAAIoB,GACXpB,EAAIoB,GAAO9C,EA5D3B,UA6DsBqB,EAAM,IA7D5B,QA8DgB1B,EAAa+B,EAAI,KAAKoB,EAAI,SA9D1C,gCAQoDF,IARpD,wCAmEUvB,EAAM,IAnEhB,QAoEI1B,EAAa+B,EAAI,KAAK,KAAK,UApE/B,6CA7IiB,sBAkOjB,OAbAhC,qBAAU,WACN3C,EAAMgG,cAAa,GACnBhG,EAAMiG,UAAS,GA5MD,WACd,IAAIhD,EAAOwC,MAAMC,KAAK,CAACvC,OAAQnD,EAAM4B,cAAc,kBAAMyD,KAAK/D,IAAI+D,KAAKa,MAAoB,GAAdb,KAAKc,UAAa,MAC/F3D,EAAcS,GACdL,EAAaK,EAAK,KAAK,KAAK,MA0M5B7B,KACF,CAACpB,EAAM4B,YAAY5B,EAAMmG,SAG3BxD,qBAAU,WACH3C,EAAMiC,OACL8B,MACA,CAAC/D,EAAMiC,QAIX,qBAAKtB,UAAY,OAAjB,SACKyB,EAAOgE,KAAI,SAACC,GAAO,OAAOA,EAAEC,e,yDCtN1BC,MAXf,WACI,OACI,sBAAK5F,UAAY,SAAjB,UACI,4DACA,cAAC,IAAD,CAAUA,UAAU,OAAOO,QAAS,kBAAMK,OAAOiF,KAAK,2DACtD,cAAC,IAAD,CAAW7F,UAAU,OAAOO,QAAS,kBAAMK,OAAOiF,KAAK,+CACvD,cAAC,IAAD,CAAQ7F,UAAU,OAAOO,QAAS,kBAAMK,OAAOiF,KAAK,4CCYjDC,MAhBf,WACE,MAAkCtE,mBAAS,uBAA3C,mBAAO6B,EAAP,KAAkB0C,EAAlB,KACA,EAAsCvE,mBAAS,IAA/C,mBAAOP,EAAP,KAAoBG,EAApB,KACA,EAA0BI,oBAAS,GAAnC,mBAAOwE,EAAP,KAAcV,EAAd,KACA,EAAkC9D,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBZ,EAAlB,KACM1D,EAAOmD,MAAMC,KAAK,CAACvC,OAAOvB,IAAc,kBAAMyD,KAAK/D,IAAI+D,KAAKa,MAAoB,GAAdb,KAAKc,UAAa,MAE1F,OACE,sBAAKxF,UAAU,MAAf,UACE,cAAC,EAAD,CAAQiB,YAAeA,EAAaG,eAAkBA,EAAgBhB,YAAeiD,EAAW7C,WAAcuF,EAAczE,MAASgE,EAAU7E,UAAa4E,IAC5J,cAAC,EAAD,CAAMhC,UAAaA,EAAWpC,YAAeA,EAAaK,MAAS0E,EAAOV,SAAYA,EAAUE,OAAUS,EAAWZ,aAAgBA,EAAc1D,KAAQA,IAC3J,cAAC,EAAD,QCTSuE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.300be848.chunk.js","sourcesContent":["import './Header.css'\r\nimport React from 'react'\r\nimport {Navbar, NavDropdown, Nav, Container, Button} from 'react-bootstrap'\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div>\r\n        <Navbar collapseOnSelect expand=\"lg\" style={{backgroundColor: '#e3f2fd'}}>\r\n        <Container>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"me-auto\" style = {{fontFamily:'Cursive'}}>Let's Visualize!</Nav>\r\n            <Nav className=\"me-auto\">\r\n            <NavDropdown title={props.currentAlgo} id=\"collasible-nav-dropdown\">\r\n                <Button id=\"SortingTypes\" variant=\"light\" onClick = {() => {props.updateAlgo(\"Insertion Sort\");}}>Insertion Sort</Button>\r\n                <Button id=\"SortingTypes\" variant=\"light\" onClick = {() => {props.updateAlgo(\"Selection Sort\");}}>Selection Sort</Button>\r\n                <Button id=\"SortingTypes\" variant=\"light\" onClick = {() => {props.updateAlgo(\"Bubble Sort\");}}>Bubble Sort</Button>\r\n                <Button id=\"SortingTypes\" variant=\"light\" onClick = {() => {props.updateAlgo(\"Count Sort\");}}>Count Sort</Button>\r\n                <Button id=\"SortingTypes\" variant=\"light\" onClick = {() => {props.updateAlgo(\"Cyclic Sort\");}}>Cyclic Sort</Button>\r\n            </NavDropdown>\r\n            </Nav>\r\n        <Button variant=\"dark\" onClick = {() => {props.randomize(true);}}>Randomize</Button>\r\n        <RangeSlider min = {5} max = {window.screen.availWidth/5.5} tooltip = \"on\" variant = \"success\" id=\"slider\" value={props.sliderValue} onChange={changeEvent => props.SetSliderValue(changeEvent.target.value)} variant='light'/>\r\n        <Button variant=\"success\" onClick = {() => {props.start(true);}}>Start</Button>\r\n        </Navbar.Collapse>\r\n        </Container>\r\n        </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import {React, useState, useEffect} from 'react'\r\nimport './Body.css'\r\nimport {Col} from 'react-bootstrap'\r\n\r\n\r\nfunction Body(props) {\r\n    const [figure, setfigure] = useState([]);\r\n    const [updateData, setupdateData] = useState(props.data);\r\n\r\n    console.log(updateData)\r\n\r\n    useEffect(() => {\r\n        updateFigure(updateData,null,null,null);\r\n    }, [])\r\n\r\n\r\n    const randomize = () => {\r\n        var temp = Array.from({length: props.sliderValue}, () => Math.max(Math.floor(Math.random()*50),1))\r\n        setupdateData(temp);\r\n        updateFigure(temp,null,null,null);\r\n    };\r\n\r\n    const updateFigure = (Udata,fPos,tPos,color) => {\r\n        var temp = [];\r\n        var screenWidth = window.screen.availWidth;\r\n        var width = screenWidth/Udata.length\r\n\r\n        for(var index = 0; index < Udata.length; index++){\r\n            if(index == fPos || index == tPos){\r\n                var bColor = color\r\n            }\r\n            else{\r\n                var bColor = 'orange'\r\n            } \r\n            temp.push({\r\n                \"element\":<Col><div style = {{textAlign:'center',color:'black',height:`${Udata[index]*10}px`,width:`${width}`, backgroundColor:`${bColor}`}}>{Udata[index]}</div></Col>,\r\n                \"element2\":<div style = {{borderLeft:`4px solid ${bColor}`,height:`${Udata[index]*10}px`,marginLeft:'1px',position:'relative',display:'inline',float:'left'}}></div>,\r\n                \"value\":<Col><div>{Udata[index]*10}</div></Col>\r\n            })\r\n        };\r\n        setfigure(temp);\r\n    };\r\n \r\n    const startSorting = () => {\r\n        console.log(updateData)\r\n        if(props.algorithm == \"Insertion Sort\"){insertionSort(updateData,updateData.length);}\r\n        if(props.algorithm == \"Selection Sort\"){selectionSort(updateData,updateData.length);}\r\n        if(props.algorithm == \"Bubble Sort\"){bubbleSort(updateData,updateData.length);}\r\n        if(props.algorithm == \"Count Sort\"){countSort(updateData);}\r\n        if(props.algorithm == \"Cyclic Sort\"){cycleSort(updateData,updateData.length);}\r\n    };\r\n\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    };\r\n\r\n    /// ******************************* Algorithms ********************************    \r\n    const insertionSort = async(arr,n) => {\r\n        console.log(\"Starting Insertion Sort\",arr)\r\n        let i, key, j;\r\n        for (i = 1; i < n; i++){ \r\n            key = arr[i]; \r\n            j = i - 1; \r\n            while (j >= 0 && arr[j] > key){ \r\n                await sleep(10);\r\n                updateFigure(arr,j+1,j,\"green\");\r\n                arr[j + 1] = arr[j];\r\n                j = j - 1;\r\n        } \r\n        arr[j + 1] = key;\r\n        }\r\n        updateFigure(arr,null,null,null);\r\n        console.log(\"After Soring : \",arr)\r\n    }\r\n\r\n    const swap = (arr,xp, yp) => {\r\n        var temp = arr[xp];\r\n        arr[xp] = arr[yp];\r\n        arr[yp] = temp;\r\n    };\r\n\r\n    const selectionSort = async(arr,n) => {\r\n        var i, j, min_idx;\r\n     \r\n        // One by one move boundary of unsorted subarray\r\n        for (i = 0; i < n-1; i++)\r\n        {\r\n            // Find the minimum element in unsorted array\r\n            min_idx = i;\r\n            for (j = i + 1; j < n; j++)\r\n            if (arr[j] < arr[min_idx])\r\n                min_idx = j;\r\n     \r\n            // Swap the found minimum element with the first element\r\n            swap(arr,min_idx, i);\r\n            await sleep(10);\r\n            updateFigure(arr,min_idx,i,\"green\");\r\n        }\r\n        updateFigure(arr,null,null,null);\r\n    };\r\n\r\n    async function bubbleSort( arr, n){\r\n    var i, j;\r\n    for (i = 0; i < n-1; i++)\r\n    {\r\n        for (j = 0; j < n-i-1; j++)\r\n        {\r\n            if (arr[j] > arr[j+1])\r\n            {\r\n            swap(arr,j,j+1);\r\n            await sleep(10);\r\n            updateFigure(arr,j,j+1,\"green\");\r\n            }\r\n        }\r\n    }};\r\n\r\n    async function countSort(arr){\r\n        var max = Math.max.apply(Math, arr);\r\n        var min = Math.min.apply(Math, arr);\r\n    \r\n        var range = max - min + 1;\r\n        var count = Array.from({length: range}, (_, i) => 0);\r\n        var output = Array.from({length: arr.length}, (_, i) => 0);\r\n        for (var i = 0; i < arr.length; i++) {\r\n            count[arr[i] - min]++;\r\n        }\r\n    \r\n        for (i = 1; i < count.length; i++) {\r\n            count[i] += count[i - 1];\r\n        }\r\n    \r\n        for (i = arr.length - 1; i >= 0; i--) {\r\n            output[count[arr[i] - min] - 1] = arr[i];\r\n            await sleep(10);\r\n            updateFigure(arr,null,i,\"red\");\r\n            count[arr[i] - min]--;\r\n        }\r\n    \r\n        for (i = 0; i < arr.length; i++) {\r\n            arr[i] = output[i];\r\n            await sleep(10);\r\n            updateFigure(arr,null,i,\"green\");\r\n        }\r\n    };\r\n\r\n    async function cycleSort(arr, n)\r\n    {\r\n     \r\n        // count number of memory writes\r\n        let writes = 0;\r\n   \r\n        // traverse array elements and put it to on\r\n        // the right place\r\n        for (let cycle_start = 0; cycle_start <= n - 2; cycle_start++)\r\n        {\r\n         \r\n            // initialize item as starting point\r\n            let item = arr[cycle_start];\r\n            await sleep(10);\r\n            updateFigure(arr,null,cycle_start,\"red\");\r\n   \r\n            // Find position where we put the item. We basically\r\n            // count all smaller elements on right side of item.\r\n            let pos = cycle_start;\r\n            for (let i = cycle_start + 1; i < n; i++)\r\n                if (arr[i] < item)\r\n                    pos++;\r\n   \r\n            // If item is already in correct position\r\n            if (pos == cycle_start)\r\n                continue;\r\n   \r\n            // ignore all duplicate elements\r\n            while (item == arr[pos])\r\n                pos += 1;\r\n   \r\n            // put the item to it's right position\r\n            if (pos != cycle_start)\r\n            {\r\n                let temp = item;\r\n                item = arr[pos];\r\n                arr[pos] = temp;\r\n                await sleep(10);\r\n                updateFigure(arr,null,pos,\"green\");\r\n                writes++;\r\n            }\r\n   \r\n            // Rotate rest of the cycle\r\n            while (pos != cycle_start)\r\n            {\r\n                pos = cycle_start;\r\n   \r\n                // Find position where we put the element\r\n                for (let i = cycle_start + 1; i < n; i++)\r\n                    if (arr[i] < item)\r\n                        pos += 1;\r\n   \r\n                // ignore all duplicate elements\r\n                while (item == arr[pos])\r\n                    pos += 1;\r\n   \r\n                // put the item to it's right position\r\n                if (item != arr[pos]) {\r\n                    let temp = item;\r\n                    item = arr[pos];\r\n                    arr[pos] = temp;\r\n                    await sleep(10);\r\n                    updateFigure(arr,null,pos,\"green\");\r\n                    writes++;\r\n                }\r\n            }\r\n        }\r\n        await sleep(10);\r\n        updateFigure(arr,null,null,\"orange\");\r\n    }\r\n\r\n    /// ******************************* Algorithms End ********************************\r\n    useEffect(() => {\r\n        props.setRandomize(false);\r\n        props.setStart(false);\r\n        randomize();\r\n    },[props.sliderValue,props.random])  \r\n    \r\n    \r\n    useEffect(() => {\r\n        if(props.start){\r\n            startSorting();\r\n        }}, [props.start])\r\n \r\n    \r\n    return (\r\n        <div className = 'body'>\r\n            {figure.map((x) => {return x.element2})}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","import React from 'react'\r\n\r\nimport LinkedIn from '@material-ui/icons/LinkedIn';\r\nimport Instagram from '@material-ui/icons/Instagram';\r\nimport GitHub from '@material-ui/icons/GitHub';\r\n\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className = \"Footer\">\r\n            <h5>Created By : Rishabh Sinha</h5>\r\n            <LinkedIn className='icon' onClick={() => window.open('https://www.linkedin.com/in/rishabh-sinha-99a706164/')}/>\r\n            <Instagram className='icon' onClick={() => window.open('https://www.instagram.com/rishabh_s1nha/')}/>\r\n            <GitHub className='icon' onClick={() => window.open('https://github.com/RishabhSinha07')}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\nimport Header from './Components/Header';\nimport Body from './Components/Body';\nimport Footer from './Components/Footer';\n\nimport { useState } from 'react';\n\nfunction App() {\n  const [algorithm, setalgorithm] = useState(\"Select an algorithm\")\n  const [sliderValue, SetSliderValue] = useState(10);\n  const [Start, setStart] = useState(false);\n  const [Randomize, setRandomize] = useState(false);\n  const data = Array.from({length:sliderValue}, () => Math.max(Math.floor(Math.random()*50),1))\n  \n  return (\n    <div className=\"App\">\n      <Header sliderValue = {sliderValue} SetSliderValue = {SetSliderValue} currentAlgo = {algorithm} updateAlgo = {setalgorithm} start = {setStart} randomize = {setRandomize}/>\n      <Body algorithm = {algorithm} sliderValue = {sliderValue} start = {Start} setStart = {setStart} random = {Randomize} setRandomize = {setRandomize} data = {data}/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}